// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vyper.proto

#include "vyper.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ArgDef_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Assignment_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BuiltinCall_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CodeBlock_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConcatCall_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ConvertCall_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionCall_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_FunctionDef_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Operation_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Operator_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Type_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Uint256_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ValOrOp_vyper_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_vyper_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Value_vyper_2eproto;
namespace vyper {
class StatementDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Statement> _instance;
  const ::vyper::Assignment* assignment_;
  const ::vyper::IfStatement* if_statement_;
  const ::vyper::FunctionCall* function_call_;
  const ::vyper::BuiltinCall* buiultin_call_;
} _Statement_default_instance_;
class Uint256DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Uint256> _instance;
} _Uint256_default_instance_;
class ValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Value> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_literal_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr var_name_;
  const ::vyper::Uint256* num_;
} _Value_default_instance_;
class OperatorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Operator> _instance;
} _Operator_default_instance_;
class OperationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Operation> _instance;
} _Operation_default_instance_;
class ValOrOpDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ValOrOp> _instance;
  const ::vyper::Value* val_;
  const ::vyper::Operation* op_;
} _ValOrOp_default_instance_;
class CodeBlockDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CodeBlock> _instance;
} _CodeBlock_default_instance_;
class ArgDefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ArgDef> _instance;
} _ArgDef_default_instance_;
class FunctionDefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDef> _instance;
} _FunctionDef_default_instance_;
class TypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Type> _instance;
} _Type_default_instance_;
class AssignmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Assignment> _instance;
} _Assignment_default_instance_;
class IfStatementDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IfStatement> _instance;
} _IfStatement_default_instance_;
class FunctionCallDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionCall> _instance;
} _FunctionCall_default_instance_;
class ConcatCallDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConcatCall> _instance;
} _ConcatCall_default_instance_;
class ConvertCallDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConvertCall> _instance;
} _ConvertCall_default_instance_;
class BuiltinCallDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BuiltinCall> _instance;
  const ::vyper::ConcatCall* concat_;
  const ::vyper::ConvertCall* convert_;
} _BuiltinCall_default_instance_;
class VyperContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VyperContract> _instance;
} _VyperContract_default_instance_;
}  // namespace vyper
static void InitDefaultsscc_info_ArgDef_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_ArgDef_default_instance_;
    new (ptr) ::vyper::ArgDef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::ArgDef::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ArgDef_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ArgDef_vyper_2eproto}, {
      &scc_info_Type_vyper_2eproto.base,}};

static void InitDefaultsscc_info_Assignment_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_Assignment_default_instance_;
    new (ptr) ::vyper::Assignment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::Assignment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Assignment_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Assignment_vyper_2eproto}, {
      &scc_info_ValOrOp_vyper_2eproto.base,}};

static void InitDefaultsscc_info_BuiltinCall_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_BuiltinCall_default_instance_;
    new (ptr) ::vyper::BuiltinCall();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::BuiltinCall::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BuiltinCall_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_BuiltinCall_vyper_2eproto}, {
      &scc_info_ConcatCall_vyper_2eproto.base,
      &scc_info_ConvertCall_vyper_2eproto.base,}};

static void InitDefaultsscc_info_CodeBlock_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_Statement_default_instance_;
    new (ptr) ::vyper::Statement();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::vyper::_CodeBlock_default_instance_;
    new (ptr) ::vyper::CodeBlock();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::vyper::_IfStatement_default_instance_;
    new (ptr) ::vyper::IfStatement();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::Statement::InitAsDefaultInstance();
  ::vyper::CodeBlock::InitAsDefaultInstance();
  ::vyper::IfStatement::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CodeBlock_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_CodeBlock_vyper_2eproto}, {
      &scc_info_Assignment_vyper_2eproto.base,
      &scc_info_FunctionCall_vyper_2eproto.base,
      &scc_info_BuiltinCall_vyper_2eproto.base,}};

static void InitDefaultsscc_info_ConcatCall_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_ConcatCall_default_instance_;
    new (ptr) ::vyper::ConcatCall();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::ConcatCall::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConcatCall_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConcatCall_vyper_2eproto}, {}};

static void InitDefaultsscc_info_ConvertCall_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_ConvertCall_default_instance_;
    new (ptr) ::vyper::ConvertCall();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::ConvertCall::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ConvertCall_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ConvertCall_vyper_2eproto}, {
      &scc_info_ValOrOp_vyper_2eproto.base,
      &scc_info_Type_vyper_2eproto.base,}};

static void InitDefaultsscc_info_FunctionCall_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_FunctionCall_default_instance_;
    new (ptr) ::vyper::FunctionCall();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::FunctionCall::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionCall_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FunctionCall_vyper_2eproto}, {
      &scc_info_ValOrOp_vyper_2eproto.base,}};

static void InitDefaultsscc_info_FunctionDef_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_FunctionDef_default_instance_;
    new (ptr) ::vyper::FunctionDef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::FunctionDef::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_FunctionDef_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_FunctionDef_vyper_2eproto}, {
      &scc_info_ArgDef_vyper_2eproto.base,
      &scc_info_CodeBlock_vyper_2eproto.base,
      &scc_info_Type_vyper_2eproto.base,}};

static void InitDefaultsscc_info_Operation_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_Operation_default_instance_;
    new (ptr) ::vyper::Operation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::Operation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Operation_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Operation_vyper_2eproto}, {
      &scc_info_Value_vyper_2eproto.base,
      &scc_info_Operator_vyper_2eproto.base,}};

static void InitDefaultsscc_info_Operator_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_Operator_default_instance_;
    new (ptr) ::vyper::Operator();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::Operator::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Operator_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Operator_vyper_2eproto}, {}};

static void InitDefaultsscc_info_Type_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_Type_default_instance_;
    new (ptr) ::vyper::Type();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::Type::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Type_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Type_vyper_2eproto}, {}};

static void InitDefaultsscc_info_Uint256_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_Uint256_default_instance_;
    new (ptr) ::vyper::Uint256();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::Uint256::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Uint256_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Uint256_vyper_2eproto}, {}};

static void InitDefaultsscc_info_ValOrOp_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_ValOrOp_default_instance_;
    new (ptr) ::vyper::ValOrOp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::ValOrOp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ValOrOp_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ValOrOp_vyper_2eproto}, {
      &scc_info_Value_vyper_2eproto.base,
      &scc_info_Operation_vyper_2eproto.base,}};

static void InitDefaultsscc_info_Value_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_Value_default_instance_;
    new (ptr) ::vyper::Value();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::Value::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Value_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Value_vyper_2eproto}, {
      &scc_info_Uint256_vyper_2eproto.base,}};

static void InitDefaultsscc_info_VyperContract_vyper_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vyper::_VyperContract_default_instance_;
    new (ptr) ::vyper::VyperContract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vyper::VyperContract::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VyperContract_vyper_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_VyperContract_vyper_2eproto}, {
      &scc_info_FunctionDef_vyper_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_vyper_2eproto[17];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_vyper_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_vyper_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_vyper_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::Statement, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vyper::Statement, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::vyper::StatementDefaultTypeInternal, assignment_),
  offsetof(::vyper::StatementDefaultTypeInternal, if_statement_),
  offsetof(::vyper::StatementDefaultTypeInternal, function_call_),
  offsetof(::vyper::StatementDefaultTypeInternal, buiultin_call_),
  PROTOBUF_FIELD_OFFSET(::vyper::Statement, statement_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::Uint256, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::Uint256, hb_),
  PROTOBUF_FIELD_OFFSET(::vyper::Uint256, lb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::Value, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vyper::Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::vyper::ValueDefaultTypeInternal, str_literal_),
  offsetof(::vyper::ValueDefaultTypeInternal, var_name_),
  offsetof(::vyper::ValueDefaultTypeInternal, num_),
  PROTOBUF_FIELD_OFFSET(::vyper::Value, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::Operator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::Operation, val1_),
  PROTOBUF_FIELD_OFFSET(::vyper::Operation, val2_),
  PROTOBUF_FIELD_OFFSET(::vyper::Operation, operator__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::ValOrOp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vyper::ValOrOp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::vyper::ValOrOpDefaultTypeInternal, val_),
  offsetof(::vyper::ValOrOpDefaultTypeInternal, op_),
  PROTOBUF_FIELD_OFFSET(::vyper::ValOrOp, value_or_op_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::CodeBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::CodeBlock, statments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::ArgDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::ArgDef, arg_name_),
  PROTOBUF_FIELD_OFFSET(::vyper::ArgDef, arg_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::FunctionDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::FunctionDef, function_name_),
  PROTOBUF_FIELD_OFFSET(::vyper::FunctionDef, args_),
  PROTOBUF_FIELD_OFFSET(::vyper::FunctionDef, block_),
  PROTOBUF_FIELD_OFFSET(::vyper::FunctionDef, external_),
  PROTOBUF_FIELD_OFFSET(::vyper::FunctionDef, return_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::Type, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::Type, typeval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::Assignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::Assignment, variable_name_),
  PROTOBUF_FIELD_OFFSET(::vyper::Assignment, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::IfStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::IfStatement, condition_),
  PROTOBUF_FIELD_OFFSET(::vyper::IfStatement, block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::FunctionCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::FunctionCall, function_name_),
  PROTOBUF_FIELD_OFFSET(::vyper::FunctionCall, args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::ConcatCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::ConcatCall, args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::ConvertCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::ConvertCall, value_),
  PROTOBUF_FIELD_OFFSET(::vyper::ConvertCall, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::BuiltinCall, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vyper::BuiltinCall, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::vyper::BuiltinCallDefaultTypeInternal, concat_),
  offsetof(::vyper::BuiltinCallDefaultTypeInternal, convert_),
  PROTOBUF_FIELD_OFFSET(::vyper::BuiltinCall, call_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vyper::VyperContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vyper::VyperContract, functions_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::vyper::Statement)},
  { 10, -1, sizeof(::vyper::Uint256)},
  { 17, -1, sizeof(::vyper::Value)},
  { 26, -1, sizeof(::vyper::Operator)},
  { 31, -1, sizeof(::vyper::Operation)},
  { 39, -1, sizeof(::vyper::ValOrOp)},
  { 47, -1, sizeof(::vyper::CodeBlock)},
  { 53, -1, sizeof(::vyper::ArgDef)},
  { 60, -1, sizeof(::vyper::FunctionDef)},
  { 70, -1, sizeof(::vyper::Type)},
  { 76, -1, sizeof(::vyper::Assignment)},
  { 83, -1, sizeof(::vyper::IfStatement)},
  { 90, -1, sizeof(::vyper::FunctionCall)},
  { 97, -1, sizeof(::vyper::ConcatCall)},
  { 103, -1, sizeof(::vyper::ConvertCall)},
  { 110, -1, sizeof(::vyper::BuiltinCall)},
  { 118, -1, sizeof(::vyper::VyperContract)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_Statement_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_Uint256_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_Value_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_Operator_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_Operation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_ValOrOp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_CodeBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_ArgDef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_FunctionDef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_Type_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_Assignment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_IfStatement_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_FunctionCall_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_ConcatCall_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_ConvertCall_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_BuiltinCall_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vyper::_VyperContract_default_instance_),
};

const char descriptor_table_protodef_vyper_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013vyper.proto\022\005vyper\"\310\001\n\tStatement\022\'\n\nas"
  "signment\030\001 \001(\0132\021.vyper.AssignmentH\000\022*\n\014i"
  "f_statement\030\002 \001(\0132\022.vyper.IfStatementH\000\022"
  ",\n\rfunction_call\030\003 \001(\0132\023.vyper.FunctionC"
  "allH\000\022+\n\rbuiultin_call\030\004 \001(\0132\022.vyper.Bui"
  "ltinCallH\000B\013\n\tstatement\"!\n\007Uint256\022\n\n\002hb"
  "\030\001 \001(\004\022\n\n\002lb\030\002 \001(\004\"Z\n\005Value\022\025\n\013str_liter"
  "al\030\001 \001(\tH\000\022\022\n\010var_name\030\002 \001(\tH\000\022\035\n\003num\030\003 "
  "\001(\0132\016.vyper.Uint256H\000B\007\n\005value\"\?\n\010Operat"
  "or\"3\n\010OPERATOR\022\010\n\004PLUS\020\000\022\t\n\005MINUS\020\001\022\t\n\005T"
  "IMES\020\002\022\007\n\003MOD\020\003\"f\n\tOperation\022\032\n\004val1\030\001 \001"
  "(\0132\014.vyper.Value\022\032\n\004val2\030\002 \001(\0132\014.vyper.V"
  "alue\022!\n\010operator\030\003 \001(\0132\017.vyper.Operator\""
  "U\n\007ValOrOp\022\033\n\003val\030\001 \001(\0132\014.vyper.ValueH\000\022"
  "\036\n\002op\030\002 \001(\0132\020.vyper.OperationH\000B\r\n\013value"
  "_or_op\"0\n\tCodeBlock\022#\n\tstatments\030\001 \003(\0132\020"
  ".vyper.Statement\"9\n\006ArgDef\022\020\n\010arg_name\030\001"
  " \001(\t\022\035\n\010arg_type\030\002 \001(\0132\013.vyper.Type\"\226\001\n\013"
  "FunctionDef\022\025\n\rfunction_name\030\001 \001(\t\022\033\n\004ar"
  "gs\030\002 \003(\0132\r.vyper.ArgDef\022\037\n\005block\030\003 \001(\0132\020"
  ".vyper.CodeBlock\022\020\n\010external\030\004 \001(\010\022 \n\013re"
  "turn_type\030\005 \001(\0132\013.vyper.Type\")\n\004Type\022!\n\007"
  "typeVal\030\001 \001(\0162\020.vyper.TYPE_ENUM\"B\n\nAssig"
  "nment\022\025\n\rvariable_name\030\001 \001(\t\022\035\n\005value\030\003 "
  "\001(\0132\016.vyper.ValOrOp\"A\n\013IfStatement\022\021\n\tco"
  "ndition\030\001 \001(\t\022\037\n\005block\030\002 \001(\0132\020.vyper.Cod"
  "eBlock\"C\n\014FunctionCall\022\025\n\rfunction_name\030"
  "\001 \001(\t\022\034\n\004args\030\003 \003(\0132\016.vyper.ValOrOp\"\032\n\nC"
  "oncatCall\022\014\n\004args\030\001 \003(\t\"G\n\013ConvertCall\022\035"
  "\n\005value\030\001 \001(\0132\016.vyper.ValOrOp\022\031\n\004type\030\002 "
  "\001(\0132\013.vyper.Type\"a\n\013BuiltinCall\022#\n\006conca"
  "t\030\001 \001(\0132\021.vyper.ConcatCallH\000\022%\n\007convert\030"
  "\002 \001(\0132\022.vyper.ConvertCallH\000B\006\n\004call\"6\n\rV"
  "yperContract\022%\n\tfunctions\030\001 \003(\0132\022.vyper."
  "FunctionDef*H\n\tTYPE_ENUM\022\013\n\007uint256\020\000\022\n\n"
  "\006int256\020\001\022\t\n\005int64\020\002\022\013\n\007bytes32\020\003\022\n\n\006Str"
  "ing\020\004b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_vyper_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_vyper_2eproto_sccs[15] = {
  &scc_info_ArgDef_vyper_2eproto.base,
  &scc_info_Assignment_vyper_2eproto.base,
  &scc_info_BuiltinCall_vyper_2eproto.base,
  &scc_info_CodeBlock_vyper_2eproto.base,
  &scc_info_ConcatCall_vyper_2eproto.base,
  &scc_info_ConvertCall_vyper_2eproto.base,
  &scc_info_FunctionCall_vyper_2eproto.base,
  &scc_info_FunctionDef_vyper_2eproto.base,
  &scc_info_Operation_vyper_2eproto.base,
  &scc_info_Operator_vyper_2eproto.base,
  &scc_info_Type_vyper_2eproto.base,
  &scc_info_Uint256_vyper_2eproto.base,
  &scc_info_ValOrOp_vyper_2eproto.base,
  &scc_info_Value_vyper_2eproto.base,
  &scc_info_VyperContract_vyper_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_vyper_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_vyper_2eproto = {
  false, false, descriptor_table_protodef_vyper_2eproto, "vyper.proto", 1453,
  &descriptor_table_vyper_2eproto_once, descriptor_table_vyper_2eproto_sccs, descriptor_table_vyper_2eproto_deps, 15, 0,
  schemas, file_default_instances, TableStruct_vyper_2eproto::offsets,
  file_level_metadata_vyper_2eproto, 17, file_level_enum_descriptors_vyper_2eproto, file_level_service_descriptors_vyper_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_vyper_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_vyper_2eproto)), true);
namespace vyper {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Operator_OPERATOR_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_vyper_2eproto);
  return file_level_enum_descriptors_vyper_2eproto[0];
}
bool Operator_OPERATOR_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Operator_OPERATOR Operator::PLUS;
constexpr Operator_OPERATOR Operator::MINUS;
constexpr Operator_OPERATOR Operator::TIMES;
constexpr Operator_OPERATOR Operator::MOD;
constexpr Operator_OPERATOR Operator::OPERATOR_MIN;
constexpr Operator_OPERATOR Operator::OPERATOR_MAX;
constexpr int Operator::OPERATOR_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TYPE_ENUM_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_vyper_2eproto);
  return file_level_enum_descriptors_vyper_2eproto[1];
}
bool TYPE_ENUM_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Statement::InitAsDefaultInstance() {
  ::vyper::_Statement_default_instance_.assignment_ = const_cast< ::vyper::Assignment*>(
      ::vyper::Assignment::internal_default_instance());
  ::vyper::_Statement_default_instance_.if_statement_ = const_cast< ::vyper::IfStatement*>(
      ::vyper::IfStatement::internal_default_instance());
  ::vyper::_Statement_default_instance_.function_call_ = const_cast< ::vyper::FunctionCall*>(
      ::vyper::FunctionCall::internal_default_instance());
  ::vyper::_Statement_default_instance_.buiultin_call_ = const_cast< ::vyper::BuiltinCall*>(
      ::vyper::BuiltinCall::internal_default_instance());
}
class Statement::_Internal {
 public:
  static const ::vyper::Assignment& assignment(const Statement* msg);
  static const ::vyper::IfStatement& if_statement(const Statement* msg);
  static const ::vyper::FunctionCall& function_call(const Statement* msg);
  static const ::vyper::BuiltinCall& buiultin_call(const Statement* msg);
};

const ::vyper::Assignment&
Statement::_Internal::assignment(const Statement* msg) {
  return *msg->statement_.assignment_;
}
const ::vyper::IfStatement&
Statement::_Internal::if_statement(const Statement* msg) {
  return *msg->statement_.if_statement_;
}
const ::vyper::FunctionCall&
Statement::_Internal::function_call(const Statement* msg) {
  return *msg->statement_.function_call_;
}
const ::vyper::BuiltinCall&
Statement::_Internal::buiultin_call(const Statement* msg) {
  return *msg->statement_.buiultin_call_;
}
void Statement::set_allocated_assignment(::vyper::Assignment* assignment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_statement();
  if (assignment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(assignment);
    if (message_arena != submessage_arena) {
      assignment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, assignment, submessage_arena);
    }
    set_has_assignment();
    statement_.assignment_ = assignment;
  }
  // @@protoc_insertion_point(field_set_allocated:vyper.Statement.assignment)
}
void Statement::set_allocated_if_statement(::vyper::IfStatement* if_statement) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_statement();
  if (if_statement) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(if_statement);
    if (message_arena != submessage_arena) {
      if_statement = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, if_statement, submessage_arena);
    }
    set_has_if_statement();
    statement_.if_statement_ = if_statement;
  }
  // @@protoc_insertion_point(field_set_allocated:vyper.Statement.if_statement)
}
void Statement::set_allocated_function_call(::vyper::FunctionCall* function_call) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_statement();
  if (function_call) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(function_call);
    if (message_arena != submessage_arena) {
      function_call = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, function_call, submessage_arena);
    }
    set_has_function_call();
    statement_.function_call_ = function_call;
  }
  // @@protoc_insertion_point(field_set_allocated:vyper.Statement.function_call)
}
void Statement::set_allocated_buiultin_call(::vyper::BuiltinCall* buiultin_call) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_statement();
  if (buiultin_call) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(buiultin_call);
    if (message_arena != submessage_arena) {
      buiultin_call = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, buiultin_call, submessage_arena);
    }
    set_has_buiultin_call();
    statement_.buiultin_call_ = buiultin_call;
  }
  // @@protoc_insertion_point(field_set_allocated:vyper.Statement.buiultin_call)
}
Statement::Statement(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.Statement)
}
Statement::Statement(const Statement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_statement();
  switch (from.statement_case()) {
    case kAssignment: {
      _internal_mutable_assignment()->::vyper::Assignment::MergeFrom(from._internal_assignment());
      break;
    }
    case kIfStatement: {
      _internal_mutable_if_statement()->::vyper::IfStatement::MergeFrom(from._internal_if_statement());
      break;
    }
    case kFunctionCall: {
      _internal_mutable_function_call()->::vyper::FunctionCall::MergeFrom(from._internal_function_call());
      break;
    }
    case kBuiultinCall: {
      _internal_mutable_buiultin_call()->::vyper::BuiltinCall::MergeFrom(from._internal_buiultin_call());
      break;
    }
    case STATEMENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vyper.Statement)
}

void Statement::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CodeBlock_vyper_2eproto.base);
  clear_has_statement();
}

Statement::~Statement() {
  // @@protoc_insertion_point(destructor:vyper.Statement)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Statement::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_statement()) {
    clear_statement();
  }
}

void Statement::ArenaDtor(void* object) {
  Statement* _this = reinterpret_cast< Statement* >(object);
  (void)_this;
}
void Statement::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Statement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Statement& Statement::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CodeBlock_vyper_2eproto.base);
  return *internal_default_instance();
}


void Statement::clear_statement() {
// @@protoc_insertion_point(one_of_clear_start:vyper.Statement)
  switch (statement_case()) {
    case kAssignment: {
      if (GetArena() == nullptr) {
        delete statement_.assignment_;
      }
      break;
    }
    case kIfStatement: {
      if (GetArena() == nullptr) {
        delete statement_.if_statement_;
      }
      break;
    }
    case kFunctionCall: {
      if (GetArena() == nullptr) {
        delete statement_.function_call_;
      }
      break;
    }
    case kBuiultinCall: {
      if (GetArena() == nullptr) {
        delete statement_.buiultin_call_;
      }
      break;
    }
    case STATEMENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STATEMENT_NOT_SET;
}


void Statement::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.Statement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_statement();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Statement::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .vyper.Assignment assignment = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_assignment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.IfStatement if_statement = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_if_statement(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.FunctionCall function_call = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_function_call(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.BuiltinCall buiultin_call = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_buiultin_call(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Statement::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.Statement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vyper.Assignment assignment = 1;
  if (_internal_has_assignment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::assignment(this), target, stream);
  }

  // .vyper.IfStatement if_statement = 2;
  if (_internal_has_if_statement()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::if_statement(this), target, stream);
  }

  // .vyper.FunctionCall function_call = 3;
  if (_internal_has_function_call()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::function_call(this), target, stream);
  }

  // .vyper.BuiltinCall buiultin_call = 4;
  if (_internal_has_buiultin_call()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::buiultin_call(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.Statement)
  return target;
}

size_t Statement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.Statement)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (statement_case()) {
    // .vyper.Assignment assignment = 1;
    case kAssignment: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *statement_.assignment_);
      break;
    }
    // .vyper.IfStatement if_statement = 2;
    case kIfStatement: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *statement_.if_statement_);
      break;
    }
    // .vyper.FunctionCall function_call = 3;
    case kFunctionCall: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *statement_.function_call_);
      break;
    }
    // .vyper.BuiltinCall buiultin_call = 4;
    case kBuiultinCall: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *statement_.buiultin_call_);
      break;
    }
    case STATEMENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Statement::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.Statement)
  GOOGLE_DCHECK_NE(&from, this);
  const Statement* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Statement>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.Statement)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.Statement)
    MergeFrom(*source);
  }
}

void Statement::MergeFrom(const Statement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.Statement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.statement_case()) {
    case kAssignment: {
      _internal_mutable_assignment()->::vyper::Assignment::MergeFrom(from._internal_assignment());
      break;
    }
    case kIfStatement: {
      _internal_mutable_if_statement()->::vyper::IfStatement::MergeFrom(from._internal_if_statement());
      break;
    }
    case kFunctionCall: {
      _internal_mutable_function_call()->::vyper::FunctionCall::MergeFrom(from._internal_function_call());
      break;
    }
    case kBuiultinCall: {
      _internal_mutable_buiultin_call()->::vyper::BuiltinCall::MergeFrom(from._internal_buiultin_call());
      break;
    }
    case STATEMENT_NOT_SET: {
      break;
    }
  }
}

void Statement::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.Statement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Statement::CopyFrom(const Statement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.Statement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Statement::IsInitialized() const {
  return true;
}

void Statement::InternalSwap(Statement* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(statement_, other->statement_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Statement::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Uint256::InitAsDefaultInstance() {
}
class Uint256::_Internal {
 public:
};

Uint256::Uint256(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.Uint256)
}
Uint256::Uint256(const Uint256& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&hb_, &from.hb_,
    static_cast<size_t>(reinterpret_cast<char*>(&lb_) -
    reinterpret_cast<char*>(&hb_)) + sizeof(lb_));
  // @@protoc_insertion_point(copy_constructor:vyper.Uint256)
}

void Uint256::SharedCtor() {
  ::memset(&hb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lb_) -
      reinterpret_cast<char*>(&hb_)) + sizeof(lb_));
}

Uint256::~Uint256() {
  // @@protoc_insertion_point(destructor:vyper.Uint256)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Uint256::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Uint256::ArenaDtor(void* object) {
  Uint256* _this = reinterpret_cast< Uint256* >(object);
  (void)_this;
}
void Uint256::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Uint256::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Uint256& Uint256::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Uint256_vyper_2eproto.base);
  return *internal_default_instance();
}


void Uint256::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.Uint256)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lb_) -
      reinterpret_cast<char*>(&hb_)) + sizeof(lb_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Uint256::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 hb = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          hb_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 lb = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          lb_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Uint256::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.Uint256)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hb = 1;
  if (this->hb() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_hb(), target);
  }

  // uint64 lb = 2;
  if (this->lb() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_lb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.Uint256)
  return target;
}

size_t Uint256::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.Uint256)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 hb = 1;
  if (this->hb() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_hb());
  }

  // uint64 lb = 2;
  if (this->lb() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_lb());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uint256::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.Uint256)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint256* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Uint256>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.Uint256)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.Uint256)
    MergeFrom(*source);
  }
}

void Uint256::MergeFrom(const Uint256& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.Uint256)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hb() != 0) {
    _internal_set_hb(from._internal_hb());
  }
  if (from.lb() != 0) {
    _internal_set_lb(from._internal_lb());
  }
}

void Uint256::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.Uint256)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint256::CopyFrom(const Uint256& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.Uint256)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint256::IsInitialized() const {
  return true;
}

void Uint256::InternalSwap(Uint256* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Uint256, lb_)
      + sizeof(Uint256::lb_)
      - PROTOBUF_FIELD_OFFSET(Uint256, hb_)>(
          reinterpret_cast<char*>(&hb_),
          reinterpret_cast<char*>(&other->hb_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Uint256::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Value::InitAsDefaultInstance() {
  ::vyper::_Value_default_instance_.str_literal_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::vyper::_Value_default_instance_.var_name_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::vyper::_Value_default_instance_.num_ = const_cast< ::vyper::Uint256*>(
      ::vyper::Uint256::internal_default_instance());
}
class Value::_Internal {
 public:
  static const ::vyper::Uint256& num(const Value* msg);
};

const ::vyper::Uint256&
Value::_Internal::num(const Value* msg) {
  return *msg->value_.num_;
}
void Value::set_allocated_num(::vyper::Uint256* num) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (num) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(num);
    if (message_arena != submessage_arena) {
      num = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, num, submessage_arena);
    }
    set_has_num();
    value_.num_ = num;
  }
  // @@protoc_insertion_point(field_set_allocated:vyper.Value.num)
}
Value::Value(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.Value)
}
Value::Value(const Value& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kStrLiteral: {
      _internal_set_str_literal(from._internal_str_literal());
      break;
    }
    case kVarName: {
      _internal_set_var_name(from._internal_var_name());
      break;
    }
    case kNum: {
      _internal_mutable_num()->::vyper::Uint256::MergeFrom(from._internal_num());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vyper.Value)
}

void Value::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Value_vyper_2eproto.base);
  clear_has_value();
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:vyper.Value)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Value::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void Value::ArenaDtor(void* object) {
  Value* _this = reinterpret_cast< Value* >(object);
  (void)_this;
}
void Value::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Value& Value::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Value_vyper_2eproto.base);
  return *internal_default_instance();
}


void Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:vyper.Value)
  switch (value_case()) {
    case kStrLiteral: {
      value_.str_literal_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kVarName: {
      value_.var_name_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kNum: {
      if (GetArena() == nullptr) {
        delete value_.num_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.Value)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Value::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string str_literal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_str_literal();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vyper.Value.str_literal"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string var_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_var_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vyper.Value.var_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.Uint256 num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_num(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Value::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.Value)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str_literal = 1;
  if (_internal_has_str_literal()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_str_literal().data(), static_cast<int>(this->_internal_str_literal().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vyper.Value.str_literal");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_str_literal(), target);
  }

  // string var_name = 2;
  if (_internal_has_var_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_name().data(), static_cast<int>(this->_internal_var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vyper.Value.var_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_var_name(), target);
  }

  // .vyper.Uint256 num = 3;
  if (_internal_has_num()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::num(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.Value)
  return target;
}

size_t Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.Value)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // string str_literal = 1;
    case kStrLiteral: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_str_literal());
      break;
    }
    // string var_name = 2;
    case kVarName: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_var_name());
      break;
    }
    // .vyper.Uint256 num = 3;
    case kNum: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.num_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Value* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Value>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.Value)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.Value)
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kStrLiteral: {
      _internal_set_str_literal(from._internal_str_literal());
      break;
    }
    case kVarName: {
      _internal_set_var_name(from._internal_var_name());
      break;
    }
    case kNum: {
      _internal_mutable_num()->::vyper::Uint256::MergeFrom(from._internal_num());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Value::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {
  return true;
}

void Value::InternalSwap(Value* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Value::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Operator::InitAsDefaultInstance() {
}
class Operator::_Internal {
 public:
};

Operator::Operator(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.Operator)
}
Operator::Operator(const Operator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vyper.Operator)
}

void Operator::SharedCtor() {
}

Operator::~Operator() {
  // @@protoc_insertion_point(destructor:vyper.Operator)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Operator::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Operator::ArenaDtor(void* object) {
  Operator* _this = reinterpret_cast< Operator* >(object);
  (void)_this;
}
void Operator::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Operator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Operator& Operator::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Operator_vyper_2eproto.base);
  return *internal_default_instance();
}


void Operator::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.Operator)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Operator::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Operator::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.Operator)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.Operator)
  return target;
}

size_t Operator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.Operator)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operator::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.Operator)
  GOOGLE_DCHECK_NE(&from, this);
  const Operator* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Operator>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.Operator)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.Operator)
    MergeFrom(*source);
  }
}

void Operator::MergeFrom(const Operator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.Operator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Operator::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.Operator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operator::CopyFrom(const Operator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.Operator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operator::IsInitialized() const {
  return true;
}

void Operator::InternalSwap(Operator* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Operator::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Operation::InitAsDefaultInstance() {
  ::vyper::_Operation_default_instance_._instance.get_mutable()->val1_ = const_cast< ::vyper::Value*>(
      ::vyper::Value::internal_default_instance());
  ::vyper::_Operation_default_instance_._instance.get_mutable()->val2_ = const_cast< ::vyper::Value*>(
      ::vyper::Value::internal_default_instance());
  ::vyper::_Operation_default_instance_._instance.get_mutable()->operator__ = const_cast< ::vyper::Operator*>(
      ::vyper::Operator::internal_default_instance());
}
class Operation::_Internal {
 public:
  static const ::vyper::Value& val1(const Operation* msg);
  static const ::vyper::Value& val2(const Operation* msg);
  static const ::vyper::Operator& operator_(const Operation* msg);
};

const ::vyper::Value&
Operation::_Internal::val1(const Operation* msg) {
  return *msg->val1_;
}
const ::vyper::Value&
Operation::_Internal::val2(const Operation* msg) {
  return *msg->val2_;
}
const ::vyper::Operator&
Operation::_Internal::operator_(const Operation* msg) {
  return *msg->operator__;
}
Operation::Operation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.Operation)
}
Operation::Operation(const Operation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_val1()) {
    val1_ = new ::vyper::Value(*from.val1_);
  } else {
    val1_ = nullptr;
  }
  if (from._internal_has_val2()) {
    val2_ = new ::vyper::Value(*from.val2_);
  } else {
    val2_ = nullptr;
  }
  if (from._internal_has_operator_()) {
    operator__ = new ::vyper::Operator(*from.operator__);
  } else {
    operator__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:vyper.Operation)
}

void Operation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Operation_vyper_2eproto.base);
  ::memset(&val1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operator__) -
      reinterpret_cast<char*>(&val1_)) + sizeof(operator__));
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:vyper.Operation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Operation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete val1_;
  if (this != internal_default_instance()) delete val2_;
  if (this != internal_default_instance()) delete operator__;
}

void Operation::ArenaDtor(void* object) {
  Operation* _this = reinterpret_cast< Operation* >(object);
  (void)_this;
}
void Operation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Operation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Operation& Operation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Operation_vyper_2eproto.base);
  return *internal_default_instance();
}


void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.Operation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && val1_ != nullptr) {
    delete val1_;
  }
  val1_ = nullptr;
  if (GetArena() == nullptr && val2_ != nullptr) {
    delete val2_;
  }
  val2_ = nullptr;
  if (GetArena() == nullptr && operator__ != nullptr) {
    delete operator__;
  }
  operator__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Operation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .vyper.Value val1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_val1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.Value val2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_val2(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.Operator operator = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_operator_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Operation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.Operation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vyper.Value val1 = 1;
  if (this->has_val1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::val1(this), target, stream);
  }

  // .vyper.Value val2 = 2;
  if (this->has_val2()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::val2(this), target, stream);
  }

  // .vyper.Operator operator = 3;
  if (this->has_operator_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::operator_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.Operation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vyper.Value val1 = 1;
  if (this->has_val1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *val1_);
  }

  // .vyper.Value val2 = 2;
  if (this->has_val2()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *val2_);
  }

  // .vyper.Operator operator = 3;
  if (this->has_operator_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *operator__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  const Operation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Operation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.Operation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.Operation)
    MergeFrom(*source);
  }
}

void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_val1()) {
    _internal_mutable_val1()->::vyper::Value::MergeFrom(from._internal_val1());
  }
  if (from.has_val2()) {
    _internal_mutable_val2()->::vyper::Value::MergeFrom(from._internal_val2());
  }
  if (from.has_operator_()) {
    _internal_mutable_operator_()->::vyper::Operator::MergeFrom(from._internal_operator_());
  }
}

void Operation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::InternalSwap(Operation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operation, operator__)
      + sizeof(Operation::operator__)
      - PROTOBUF_FIELD_OFFSET(Operation, val1_)>(
          reinterpret_cast<char*>(&val1_),
          reinterpret_cast<char*>(&other->val1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Operation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ValOrOp::InitAsDefaultInstance() {
  ::vyper::_ValOrOp_default_instance_.val_ = const_cast< ::vyper::Value*>(
      ::vyper::Value::internal_default_instance());
  ::vyper::_ValOrOp_default_instance_.op_ = const_cast< ::vyper::Operation*>(
      ::vyper::Operation::internal_default_instance());
}
class ValOrOp::_Internal {
 public:
  static const ::vyper::Value& val(const ValOrOp* msg);
  static const ::vyper::Operation& op(const ValOrOp* msg);
};

const ::vyper::Value&
ValOrOp::_Internal::val(const ValOrOp* msg) {
  return *msg->value_or_op_.val_;
}
const ::vyper::Operation&
ValOrOp::_Internal::op(const ValOrOp* msg) {
  return *msg->value_or_op_.op_;
}
void ValOrOp::set_allocated_val(::vyper::Value* val) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value_or_op();
  if (val) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(val);
    if (message_arena != submessage_arena) {
      val = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, val, submessage_arena);
    }
    set_has_val();
    value_or_op_.val_ = val;
  }
  // @@protoc_insertion_point(field_set_allocated:vyper.ValOrOp.val)
}
void ValOrOp::set_allocated_op(::vyper::Operation* op) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value_or_op();
  if (op) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(op);
    if (message_arena != submessage_arena) {
      op = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, op, submessage_arena);
    }
    set_has_op();
    value_or_op_.op_ = op;
  }
  // @@protoc_insertion_point(field_set_allocated:vyper.ValOrOp.op)
}
ValOrOp::ValOrOp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.ValOrOp)
}
ValOrOp::ValOrOp(const ValOrOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value_or_op();
  switch (from.value_or_op_case()) {
    case kVal: {
      _internal_mutable_val()->::vyper::Value::MergeFrom(from._internal_val());
      break;
    }
    case kOp: {
      _internal_mutable_op()->::vyper::Operation::MergeFrom(from._internal_op());
      break;
    }
    case VALUE_OR_OP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vyper.ValOrOp)
}

void ValOrOp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ValOrOp_vyper_2eproto.base);
  clear_has_value_or_op();
}

ValOrOp::~ValOrOp() {
  // @@protoc_insertion_point(destructor:vyper.ValOrOp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ValOrOp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_value_or_op()) {
    clear_value_or_op();
  }
}

void ValOrOp::ArenaDtor(void* object) {
  ValOrOp* _this = reinterpret_cast< ValOrOp* >(object);
  (void)_this;
}
void ValOrOp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValOrOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValOrOp& ValOrOp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ValOrOp_vyper_2eproto.base);
  return *internal_default_instance();
}


void ValOrOp::clear_value_or_op() {
// @@protoc_insertion_point(one_of_clear_start:vyper.ValOrOp)
  switch (value_or_op_case()) {
    case kVal: {
      if (GetArena() == nullptr) {
        delete value_or_op_.val_;
      }
      break;
    }
    case kOp: {
      if (GetArena() == nullptr) {
        delete value_or_op_.op_;
      }
      break;
    }
    case VALUE_OR_OP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_OR_OP_NOT_SET;
}


void ValOrOp::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.ValOrOp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value_or_op();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValOrOp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .vyper.Value val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_val(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.Operation op = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_op(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ValOrOp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.ValOrOp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vyper.Value val = 1;
  if (_internal_has_val()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::val(this), target, stream);
  }

  // .vyper.Operation op = 2;
  if (_internal_has_op()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::op(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.ValOrOp)
  return target;
}

size_t ValOrOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.ValOrOp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_or_op_case()) {
    // .vyper.Value val = 1;
    case kVal: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_or_op_.val_);
      break;
    }
    // .vyper.Operation op = 2;
    case kOp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_or_op_.op_);
      break;
    }
    case VALUE_OR_OP_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValOrOp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.ValOrOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ValOrOp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ValOrOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.ValOrOp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.ValOrOp)
    MergeFrom(*source);
  }
}

void ValOrOp::MergeFrom(const ValOrOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.ValOrOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_or_op_case()) {
    case kVal: {
      _internal_mutable_val()->::vyper::Value::MergeFrom(from._internal_val());
      break;
    }
    case kOp: {
      _internal_mutable_op()->::vyper::Operation::MergeFrom(from._internal_op());
      break;
    }
    case VALUE_OR_OP_NOT_SET: {
      break;
    }
  }
}

void ValOrOp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.ValOrOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValOrOp::CopyFrom(const ValOrOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.ValOrOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValOrOp::IsInitialized() const {
  return true;
}

void ValOrOp::InternalSwap(ValOrOp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(value_or_op_, other->value_or_op_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValOrOp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CodeBlock::InitAsDefaultInstance() {
}
class CodeBlock::_Internal {
 public:
};

CodeBlock::CodeBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  statments_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.CodeBlock)
}
CodeBlock::CodeBlock(const CodeBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      statments_(from.statments_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vyper.CodeBlock)
}

void CodeBlock::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CodeBlock_vyper_2eproto.base);
}

CodeBlock::~CodeBlock() {
  // @@protoc_insertion_point(destructor:vyper.CodeBlock)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CodeBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CodeBlock::ArenaDtor(void* object) {
  CodeBlock* _this = reinterpret_cast< CodeBlock* >(object);
  (void)_this;
}
void CodeBlock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CodeBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CodeBlock& CodeBlock::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CodeBlock_vyper_2eproto.base);
  return *internal_default_instance();
}


void CodeBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.CodeBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  statments_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CodeBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .vyper.Statement statments = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_statments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CodeBlock::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.CodeBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vyper.Statement statments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_statments_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_statments(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.CodeBlock)
  return target;
}

size_t CodeBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.CodeBlock)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vyper.Statement statments = 1;
  total_size += 1UL * this->_internal_statments_size();
  for (const auto& msg : this->statments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CodeBlock::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.CodeBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const CodeBlock* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CodeBlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.CodeBlock)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.CodeBlock)
    MergeFrom(*source);
  }
}

void CodeBlock::MergeFrom(const CodeBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.CodeBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  statments_.MergeFrom(from.statments_);
}

void CodeBlock::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.CodeBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodeBlock::CopyFrom(const CodeBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.CodeBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodeBlock::IsInitialized() const {
  return true;
}

void CodeBlock::InternalSwap(CodeBlock* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  statments_.InternalSwap(&other->statments_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CodeBlock::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ArgDef::InitAsDefaultInstance() {
  ::vyper::_ArgDef_default_instance_._instance.get_mutable()->arg_type_ = const_cast< ::vyper::Type*>(
      ::vyper::Type::internal_default_instance());
}
class ArgDef::_Internal {
 public:
  static const ::vyper::Type& arg_type(const ArgDef* msg);
};

const ::vyper::Type&
ArgDef::_Internal::arg_type(const ArgDef* msg) {
  return *msg->arg_type_;
}
ArgDef::ArgDef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.ArgDef)
}
ArgDef::ArgDef(const ArgDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  arg_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_arg_name().empty()) {
    arg_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_arg_name(),
      GetArena());
  }
  if (from._internal_has_arg_type()) {
    arg_type_ = new ::vyper::Type(*from.arg_type_);
  } else {
    arg_type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:vyper.ArgDef)
}

void ArgDef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ArgDef_vyper_2eproto.base);
  arg_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  arg_type_ = nullptr;
}

ArgDef::~ArgDef() {
  // @@protoc_insertion_point(destructor:vyper.ArgDef)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArgDef::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  arg_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete arg_type_;
}

void ArgDef::ArenaDtor(void* object) {
  ArgDef* _this = reinterpret_cast< ArgDef* >(object);
  (void)_this;
}
void ArgDef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArgDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArgDef& ArgDef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ArgDef_vyper_2eproto.base);
  return *internal_default_instance();
}


void ArgDef::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.ArgDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arg_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && arg_type_ != nullptr) {
    delete arg_type_;
  }
  arg_type_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArgDef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string arg_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_arg_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vyper.ArgDef.arg_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.Type arg_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_arg_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArgDef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.ArgDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string arg_name = 1;
  if (this->arg_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_arg_name().data(), static_cast<int>(this->_internal_arg_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vyper.ArgDef.arg_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_arg_name(), target);
  }

  // .vyper.Type arg_type = 2;
  if (this->has_arg_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::arg_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.ArgDef)
  return target;
}

size_t ArgDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.ArgDef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string arg_name = 1;
  if (this->arg_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_arg_name());
  }

  // .vyper.Type arg_type = 2;
  if (this->has_arg_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *arg_type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArgDef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.ArgDef)
  GOOGLE_DCHECK_NE(&from, this);
  const ArgDef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArgDef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.ArgDef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.ArgDef)
    MergeFrom(*source);
  }
}

void ArgDef::MergeFrom(const ArgDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.ArgDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.arg_name().size() > 0) {
    _internal_set_arg_name(from._internal_arg_name());
  }
  if (from.has_arg_type()) {
    _internal_mutable_arg_type()->::vyper::Type::MergeFrom(from._internal_arg_type());
  }
}

void ArgDef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.ArgDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArgDef::CopyFrom(const ArgDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.ArgDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArgDef::IsInitialized() const {
  return true;
}

void ArgDef::InternalSwap(ArgDef* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arg_name_.Swap(&other->arg_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(arg_type_, other->arg_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArgDef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FunctionDef::InitAsDefaultInstance() {
  ::vyper::_FunctionDef_default_instance_._instance.get_mutable()->block_ = const_cast< ::vyper::CodeBlock*>(
      ::vyper::CodeBlock::internal_default_instance());
  ::vyper::_FunctionDef_default_instance_._instance.get_mutable()->return_type_ = const_cast< ::vyper::Type*>(
      ::vyper::Type::internal_default_instance());
}
class FunctionDef::_Internal {
 public:
  static const ::vyper::CodeBlock& block(const FunctionDef* msg);
  static const ::vyper::Type& return_type(const FunctionDef* msg);
};

const ::vyper::CodeBlock&
FunctionDef::_Internal::block(const FunctionDef* msg) {
  return *msg->block_;
}
const ::vyper::Type&
FunctionDef::_Internal::return_type(const FunctionDef* msg) {
  return *msg->return_type_;
}
FunctionDef::FunctionDef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  args_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.FunctionDef)
}
FunctionDef::FunctionDef(const FunctionDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      args_(from.args_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  function_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_function_name().empty()) {
    function_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_function_name(),
      GetArena());
  }
  if (from._internal_has_block()) {
    block_ = new ::vyper::CodeBlock(*from.block_);
  } else {
    block_ = nullptr;
  }
  if (from._internal_has_return_type()) {
    return_type_ = new ::vyper::Type(*from.return_type_);
  } else {
    return_type_ = nullptr;
  }
  external_ = from.external_;
  // @@protoc_insertion_point(copy_constructor:vyper.FunctionDef)
}

void FunctionDef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FunctionDef_vyper_2eproto.base);
  function_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&external_) -
      reinterpret_cast<char*>(&block_)) + sizeof(external_));
}

FunctionDef::~FunctionDef() {
  // @@protoc_insertion_point(destructor:vyper.FunctionDef)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FunctionDef::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  function_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete block_;
  if (this != internal_default_instance()) delete return_type_;
}

void FunctionDef::ArenaDtor(void* object) {
  FunctionDef* _this = reinterpret_cast< FunctionDef* >(object);
  (void)_this;
}
void FunctionDef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FunctionDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FunctionDef& FunctionDef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FunctionDef_vyper_2eproto.base);
  return *internal_default_instance();
}


void FunctionDef::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.FunctionDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  function_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && block_ != nullptr) {
    delete block_;
  }
  block_ = nullptr;
  if (GetArena() == nullptr && return_type_ != nullptr) {
    delete return_type_;
  }
  return_type_ = nullptr;
  external_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionDef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string function_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_function_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vyper.FunctionDef.function_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .vyper.ArgDef args = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_args(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .vyper.CodeBlock block = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool external = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          external_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.Type return_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_return_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FunctionDef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.FunctionDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function_name = 1;
  if (this->function_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function_name().data(), static_cast<int>(this->_internal_function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vyper.FunctionDef.function_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_function_name(), target);
  }

  // repeated .vyper.ArgDef args = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_args_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_args(i), target, stream);
  }

  // .vyper.CodeBlock block = 3;
  if (this->has_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::block(this), target, stream);
  }

  // bool external = 4;
  if (this->external() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_external(), target);
  }

  // .vyper.Type return_type = 5;
  if (this->has_return_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::return_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.FunctionDef)
  return target;
}

size_t FunctionDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.FunctionDef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vyper.ArgDef args = 2;
  total_size += 1UL * this->_internal_args_size();
  for (const auto& msg : this->args_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string function_name = 1;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function_name());
  }

  // .vyper.CodeBlock block = 3;
  if (this->has_block()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_);
  }

  // .vyper.Type return_type = 5;
  if (this->has_return_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *return_type_);
  }

  // bool external = 4;
  if (this->external() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionDef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.FunctionDef)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionDef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FunctionDef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.FunctionDef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.FunctionDef)
    MergeFrom(*source);
  }
}

void FunctionDef::MergeFrom(const FunctionDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.FunctionDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from.function_name().size() > 0) {
    _internal_set_function_name(from._internal_function_name());
  }
  if (from.has_block()) {
    _internal_mutable_block()->::vyper::CodeBlock::MergeFrom(from._internal_block());
  }
  if (from.has_return_type()) {
    _internal_mutable_return_type()->::vyper::Type::MergeFrom(from._internal_return_type());
  }
  if (from.external() != 0) {
    _internal_set_external(from._internal_external());
  }
}

void FunctionDef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.FunctionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionDef::CopyFrom(const FunctionDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.FunctionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionDef::IsInitialized() const {
  return true;
}

void FunctionDef::InternalSwap(FunctionDef* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  args_.InternalSwap(&other->args_);
  function_name_.Swap(&other->function_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FunctionDef, external_)
      + sizeof(FunctionDef::external_)
      - PROTOBUF_FIELD_OFFSET(FunctionDef, block_)>(
          reinterpret_cast<char*>(&block_),
          reinterpret_cast<char*>(&other->block_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionDef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Type::InitAsDefaultInstance() {
}
class Type::_Internal {
 public:
};

Type::Type(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.Type)
}
Type::Type(const Type& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  typeval_ = from.typeval_;
  // @@protoc_insertion_point(copy_constructor:vyper.Type)
}

void Type::SharedCtor() {
  typeval_ = 0;
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:vyper.Type)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Type::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Type::ArenaDtor(void* object) {
  Type* _this = reinterpret_cast< Type* >(object);
  (void)_this;
}
void Type::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Type& Type::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Type_vyper_2eproto.base);
  return *internal_default_instance();
}


void Type::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.Type)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typeval_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Type::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .vyper.TYPE_ENUM typeVal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_typeval(static_cast<::vyper::TYPE_ENUM>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Type::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.Type)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vyper.TYPE_ENUM typeVal = 1;
  if (this->typeval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_typeval(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.Type)
  return target;
}

size_t Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.Type)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vyper.TYPE_ENUM typeVal = 1;
  if (this->typeval() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_typeval());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Type* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Type>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.Type)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.Type)
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.typeval() != 0) {
    _internal_set_typeval(from._internal_typeval());
  }
}

void Type::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  return true;
}

void Type::InternalSwap(Type* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(typeval_, other->typeval_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Type::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Assignment::InitAsDefaultInstance() {
  ::vyper::_Assignment_default_instance_._instance.get_mutable()->value_ = const_cast< ::vyper::ValOrOp*>(
      ::vyper::ValOrOp::internal_default_instance());
}
class Assignment::_Internal {
 public:
  static const ::vyper::ValOrOp& value(const Assignment* msg);
};

const ::vyper::ValOrOp&
Assignment::_Internal::value(const Assignment* msg) {
  return *msg->value_;
}
Assignment::Assignment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.Assignment)
}
Assignment::Assignment(const Assignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  variable_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_variable_name().empty()) {
    variable_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_variable_name(),
      GetArena());
  }
  if (from._internal_has_value()) {
    value_ = new ::vyper::ValOrOp(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:vyper.Assignment)
}

void Assignment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Assignment_vyper_2eproto.base);
  variable_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = nullptr;
}

Assignment::~Assignment() {
  // @@protoc_insertion_point(destructor:vyper.Assignment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Assignment::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  variable_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void Assignment::ArenaDtor(void* object) {
  Assignment* _this = reinterpret_cast< Assignment* >(object);
  (void)_this;
}
void Assignment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Assignment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Assignment& Assignment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Assignment_vyper_2eproto.base);
  return *internal_default_instance();
}


void Assignment::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.Assignment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variable_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Assignment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string variable_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_variable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vyper.Assignment.variable_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.ValOrOp value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Assignment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.Assignment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string variable_name = 1;
  if (this->variable_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variable_name().data(), static_cast<int>(this->_internal_variable_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vyper.Assignment.variable_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_variable_name(), target);
  }

  // .vyper.ValOrOp value = 3;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.Assignment)
  return target;
}

size_t Assignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.Assignment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string variable_name = 1;
  if (this->variable_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variable_name());
  }

  // .vyper.ValOrOp value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Assignment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.Assignment)
  GOOGLE_DCHECK_NE(&from, this);
  const Assignment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Assignment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.Assignment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.Assignment)
    MergeFrom(*source);
  }
}

void Assignment::MergeFrom(const Assignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.Assignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.variable_name().size() > 0) {
    _internal_set_variable_name(from._internal_variable_name());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::vyper::ValOrOp::MergeFrom(from._internal_value());
  }
}

void Assignment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.Assignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Assignment::CopyFrom(const Assignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.Assignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Assignment::IsInitialized() const {
  return true;
}

void Assignment::InternalSwap(Assignment* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  variable_name_.Swap(&other->variable_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Assignment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IfStatement::InitAsDefaultInstance() {
  ::vyper::_IfStatement_default_instance_._instance.get_mutable()->block_ = const_cast< ::vyper::CodeBlock*>(
      ::vyper::CodeBlock::internal_default_instance());
}
class IfStatement::_Internal {
 public:
  static const ::vyper::CodeBlock& block(const IfStatement* msg);
};

const ::vyper::CodeBlock&
IfStatement::_Internal::block(const IfStatement* msg) {
  return *msg->block_;
}
IfStatement::IfStatement(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.IfStatement)
}
IfStatement::IfStatement(const IfStatement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_condition().empty()) {
    condition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_condition(),
      GetArena());
  }
  if (from._internal_has_block()) {
    block_ = new ::vyper::CodeBlock(*from.block_);
  } else {
    block_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:vyper.IfStatement)
}

void IfStatement::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CodeBlock_vyper_2eproto.base);
  condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_ = nullptr;
}

IfStatement::~IfStatement() {
  // @@protoc_insertion_point(destructor:vyper.IfStatement)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IfStatement::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  condition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete block_;
}

void IfStatement::ArenaDtor(void* object) {
  IfStatement* _this = reinterpret_cast< IfStatement* >(object);
  (void)_this;
}
void IfStatement::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IfStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IfStatement& IfStatement::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CodeBlock_vyper_2eproto.base);
  return *internal_default_instance();
}


void IfStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.IfStatement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  condition_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && block_ != nullptr) {
    delete block_;
  }
  block_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IfStatement::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string condition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_condition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vyper.IfStatement.condition"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.CodeBlock block = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IfStatement::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.IfStatement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string condition = 1;
  if (this->condition().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_condition().data(), static_cast<int>(this->_internal_condition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vyper.IfStatement.condition");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_condition(), target);
  }

  // .vyper.CodeBlock block = 2;
  if (this->has_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::block(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.IfStatement)
  return target;
}

size_t IfStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.IfStatement)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string condition = 1;
  if (this->condition().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_condition());
  }

  // .vyper.CodeBlock block = 2;
  if (this->has_block()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IfStatement::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.IfStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const IfStatement* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IfStatement>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.IfStatement)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.IfStatement)
    MergeFrom(*source);
  }
}

void IfStatement::MergeFrom(const IfStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.IfStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.condition().size() > 0) {
    _internal_set_condition(from._internal_condition());
  }
  if (from.has_block()) {
    _internal_mutable_block()->::vyper::CodeBlock::MergeFrom(from._internal_block());
  }
}

void IfStatement::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.IfStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IfStatement::CopyFrom(const IfStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.IfStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IfStatement::IsInitialized() const {
  return true;
}

void IfStatement::InternalSwap(IfStatement* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  condition_.Swap(&other->condition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(block_, other->block_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IfStatement::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FunctionCall::InitAsDefaultInstance() {
}
class FunctionCall::_Internal {
 public:
};

FunctionCall::FunctionCall(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  args_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.FunctionCall)
}
FunctionCall::FunctionCall(const FunctionCall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      args_(from.args_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  function_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_function_name().empty()) {
    function_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_function_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:vyper.FunctionCall)
}

void FunctionCall::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FunctionCall_vyper_2eproto.base);
  function_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FunctionCall::~FunctionCall() {
  // @@protoc_insertion_point(destructor:vyper.FunctionCall)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FunctionCall::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  function_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FunctionCall::ArenaDtor(void* object) {
  FunctionCall* _this = reinterpret_cast< FunctionCall* >(object);
  (void)_this;
}
void FunctionCall::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FunctionCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FunctionCall& FunctionCall::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FunctionCall_vyper_2eproto.base);
  return *internal_default_instance();
}


void FunctionCall::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.FunctionCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  function_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionCall::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string function_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_function_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vyper.FunctionCall.function_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .vyper.ValOrOp args = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_args(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FunctionCall::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.FunctionCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function_name = 1;
  if (this->function_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function_name().data(), static_cast<int>(this->_internal_function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vyper.FunctionCall.function_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_function_name(), target);
  }

  // repeated .vyper.ValOrOp args = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_args_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_args(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.FunctionCall)
  return target;
}

size_t FunctionCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.FunctionCall)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vyper.ValOrOp args = 3;
  total_size += 1UL * this->_internal_args_size();
  for (const auto& msg : this->args_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string function_name = 1;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionCall::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.FunctionCall)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionCall* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FunctionCall>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.FunctionCall)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.FunctionCall)
    MergeFrom(*source);
  }
}

void FunctionCall::MergeFrom(const FunctionCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.FunctionCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from.function_name().size() > 0) {
    _internal_set_function_name(from._internal_function_name());
  }
}

void FunctionCall::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.FunctionCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionCall::CopyFrom(const FunctionCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.FunctionCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionCall::IsInitialized() const {
  return true;
}

void FunctionCall::InternalSwap(FunctionCall* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  args_.InternalSwap(&other->args_);
  function_name_.Swap(&other->function_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionCall::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConcatCall::InitAsDefaultInstance() {
}
class ConcatCall::_Internal {
 public:
};

ConcatCall::ConcatCall(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  args_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.ConcatCall)
}
ConcatCall::ConcatCall(const ConcatCall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      args_(from.args_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vyper.ConcatCall)
}

void ConcatCall::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConcatCall_vyper_2eproto.base);
}

ConcatCall::~ConcatCall() {
  // @@protoc_insertion_point(destructor:vyper.ConcatCall)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConcatCall::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ConcatCall::ArenaDtor(void* object) {
  ConcatCall* _this = reinterpret_cast< ConcatCall* >(object);
  (void)_this;
}
void ConcatCall::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConcatCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConcatCall& ConcatCall::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConcatCall_vyper_2eproto.base);
  return *internal_default_instance();
}


void ConcatCall::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.ConcatCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConcatCall::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string args = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_args();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vyper.ConcatCall.args"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConcatCall::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.ConcatCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string args = 1;
  for (int i = 0, n = this->_internal_args_size(); i < n; i++) {
    const auto& s = this->_internal_args(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vyper.ConcatCall.args");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.ConcatCall)
  return target;
}

size_t ConcatCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.ConcatCall)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string args = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(args_.size());
  for (int i = 0, n = args_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      args_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConcatCall::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.ConcatCall)
  GOOGLE_DCHECK_NE(&from, this);
  const ConcatCall* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConcatCall>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.ConcatCall)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.ConcatCall)
    MergeFrom(*source);
  }
}

void ConcatCall::MergeFrom(const ConcatCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.ConcatCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
}

void ConcatCall::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.ConcatCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConcatCall::CopyFrom(const ConcatCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.ConcatCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConcatCall::IsInitialized() const {
  return true;
}

void ConcatCall::InternalSwap(ConcatCall* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  args_.InternalSwap(&other->args_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConcatCall::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConvertCall::InitAsDefaultInstance() {
  ::vyper::_ConvertCall_default_instance_._instance.get_mutable()->value_ = const_cast< ::vyper::ValOrOp*>(
      ::vyper::ValOrOp::internal_default_instance());
  ::vyper::_ConvertCall_default_instance_._instance.get_mutable()->type_ = const_cast< ::vyper::Type*>(
      ::vyper::Type::internal_default_instance());
}
class ConvertCall::_Internal {
 public:
  static const ::vyper::ValOrOp& value(const ConvertCall* msg);
  static const ::vyper::Type& type(const ConvertCall* msg);
};

const ::vyper::ValOrOp&
ConvertCall::_Internal::value(const ConvertCall* msg) {
  return *msg->value_;
}
const ::vyper::Type&
ConvertCall::_Internal::type(const ConvertCall* msg) {
  return *msg->type_;
}
ConvertCall::ConvertCall(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.ConvertCall)
}
ConvertCall::ConvertCall(const ConvertCall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::vyper::ValOrOp(*from.value_);
  } else {
    value_ = nullptr;
  }
  if (from._internal_has_type()) {
    type_ = new ::vyper::Type(*from.type_);
  } else {
    type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:vyper.ConvertCall)
}

void ConvertCall::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConvertCall_vyper_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&value_)) + sizeof(type_));
}

ConvertCall::~ConvertCall() {
  // @@protoc_insertion_point(destructor:vyper.ConvertCall)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConvertCall::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete type_;
}

void ConvertCall::ArenaDtor(void* object) {
  ConvertCall* _this = reinterpret_cast< ConvertCall* >(object);
  (void)_this;
}
void ConvertCall::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConvertCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConvertCall& ConvertCall::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConvertCall_vyper_2eproto.base);
  return *internal_default_instance();
}


void ConvertCall::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.ConvertCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  if (GetArena() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConvertCall::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .vyper.ValOrOp value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.Type type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConvertCall::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.ConvertCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vyper.ValOrOp value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  // .vyper.Type type = 2;
  if (this->has_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.ConvertCall)
  return target;
}

size_t ConvertCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.ConvertCall)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vyper.ValOrOp value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .vyper.Type type = 2;
  if (this->has_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvertCall::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.ConvertCall)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvertCall* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConvertCall>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.ConvertCall)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.ConvertCall)
    MergeFrom(*source);
  }
}

void ConvertCall::MergeFrom(const ConvertCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.ConvertCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::vyper::ValOrOp::MergeFrom(from._internal_value());
  }
  if (from.has_type()) {
    _internal_mutable_type()->::vyper::Type::MergeFrom(from._internal_type());
  }
}

void ConvertCall::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.ConvertCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvertCall::CopyFrom(const ConvertCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.ConvertCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvertCall::IsInitialized() const {
  return true;
}

void ConvertCall::InternalSwap(ConvertCall* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConvertCall, type_)
      + sizeof(ConvertCall::type_)
      - PROTOBUF_FIELD_OFFSET(ConvertCall, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConvertCall::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BuiltinCall::InitAsDefaultInstance() {
  ::vyper::_BuiltinCall_default_instance_.concat_ = const_cast< ::vyper::ConcatCall*>(
      ::vyper::ConcatCall::internal_default_instance());
  ::vyper::_BuiltinCall_default_instance_.convert_ = const_cast< ::vyper::ConvertCall*>(
      ::vyper::ConvertCall::internal_default_instance());
}
class BuiltinCall::_Internal {
 public:
  static const ::vyper::ConcatCall& concat(const BuiltinCall* msg);
  static const ::vyper::ConvertCall& convert(const BuiltinCall* msg);
};

const ::vyper::ConcatCall&
BuiltinCall::_Internal::concat(const BuiltinCall* msg) {
  return *msg->call_.concat_;
}
const ::vyper::ConvertCall&
BuiltinCall::_Internal::convert(const BuiltinCall* msg) {
  return *msg->call_.convert_;
}
void BuiltinCall::set_allocated_concat(::vyper::ConcatCall* concat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_call();
  if (concat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(concat);
    if (message_arena != submessage_arena) {
      concat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, concat, submessage_arena);
    }
    set_has_concat();
    call_.concat_ = concat;
  }
  // @@protoc_insertion_point(field_set_allocated:vyper.BuiltinCall.concat)
}
void BuiltinCall::set_allocated_convert(::vyper::ConvertCall* convert) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_call();
  if (convert) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(convert);
    if (message_arena != submessage_arena) {
      convert = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, convert, submessage_arena);
    }
    set_has_convert();
    call_.convert_ = convert;
  }
  // @@protoc_insertion_point(field_set_allocated:vyper.BuiltinCall.convert)
}
BuiltinCall::BuiltinCall(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.BuiltinCall)
}
BuiltinCall::BuiltinCall(const BuiltinCall& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_call();
  switch (from.call_case()) {
    case kConcat: {
      _internal_mutable_concat()->::vyper::ConcatCall::MergeFrom(from._internal_concat());
      break;
    }
    case kConvert: {
      _internal_mutable_convert()->::vyper::ConvertCall::MergeFrom(from._internal_convert());
      break;
    }
    case CALL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vyper.BuiltinCall)
}

void BuiltinCall::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BuiltinCall_vyper_2eproto.base);
  clear_has_call();
}

BuiltinCall::~BuiltinCall() {
  // @@protoc_insertion_point(destructor:vyper.BuiltinCall)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuiltinCall::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_call()) {
    clear_call();
  }
}

void BuiltinCall::ArenaDtor(void* object) {
  BuiltinCall* _this = reinterpret_cast< BuiltinCall* >(object);
  (void)_this;
}
void BuiltinCall::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuiltinCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuiltinCall& BuiltinCall::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BuiltinCall_vyper_2eproto.base);
  return *internal_default_instance();
}


void BuiltinCall::clear_call() {
// @@protoc_insertion_point(one_of_clear_start:vyper.BuiltinCall)
  switch (call_case()) {
    case kConcat: {
      if (GetArena() == nullptr) {
        delete call_.concat_;
      }
      break;
    }
    case kConvert: {
      if (GetArena() == nullptr) {
        delete call_.convert_;
      }
      break;
    }
    case CALL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CALL_NOT_SET;
}


void BuiltinCall::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.BuiltinCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_call();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuiltinCall::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .vyper.ConcatCall concat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_concat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .vyper.ConvertCall convert = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_convert(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuiltinCall::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.BuiltinCall)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vyper.ConcatCall concat = 1;
  if (_internal_has_concat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::concat(this), target, stream);
  }

  // .vyper.ConvertCall convert = 2;
  if (_internal_has_convert()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::convert(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.BuiltinCall)
  return target;
}

size_t BuiltinCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.BuiltinCall)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (call_case()) {
    // .vyper.ConcatCall concat = 1;
    case kConcat: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *call_.concat_);
      break;
    }
    // .vyper.ConvertCall convert = 2;
    case kConvert: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *call_.convert_);
      break;
    }
    case CALL_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuiltinCall::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.BuiltinCall)
  GOOGLE_DCHECK_NE(&from, this);
  const BuiltinCall* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuiltinCall>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.BuiltinCall)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.BuiltinCall)
    MergeFrom(*source);
  }
}

void BuiltinCall::MergeFrom(const BuiltinCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.BuiltinCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.call_case()) {
    case kConcat: {
      _internal_mutable_concat()->::vyper::ConcatCall::MergeFrom(from._internal_concat());
      break;
    }
    case kConvert: {
      _internal_mutable_convert()->::vyper::ConvertCall::MergeFrom(from._internal_convert());
      break;
    }
    case CALL_NOT_SET: {
      break;
    }
  }
}

void BuiltinCall::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.BuiltinCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuiltinCall::CopyFrom(const BuiltinCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.BuiltinCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuiltinCall::IsInitialized() const {
  return true;
}

void BuiltinCall::InternalSwap(BuiltinCall* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(call_, other->call_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuiltinCall::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VyperContract::InitAsDefaultInstance() {
}
class VyperContract::_Internal {
 public:
};

VyperContract::VyperContract(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  functions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:vyper.VyperContract)
}
VyperContract::VyperContract(const VyperContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      functions_(from.functions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vyper.VyperContract)
}

void VyperContract::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VyperContract_vyper_2eproto.base);
}

VyperContract::~VyperContract() {
  // @@protoc_insertion_point(destructor:vyper.VyperContract)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VyperContract::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void VyperContract::ArenaDtor(void* object) {
  VyperContract* _this = reinterpret_cast< VyperContract* >(object);
  (void)_this;
}
void VyperContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VyperContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VyperContract& VyperContract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VyperContract_vyper_2eproto.base);
  return *internal_default_instance();
}


void VyperContract::Clear() {
// @@protoc_insertion_point(message_clear_start:vyper.VyperContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  functions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VyperContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .vyper.FunctionDef functions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_functions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VyperContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vyper.VyperContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vyper.FunctionDef functions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_functions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_functions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vyper.VyperContract)
  return target;
}

size_t VyperContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vyper.VyperContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vyper.FunctionDef functions = 1;
  total_size += 1UL * this->_internal_functions_size();
  for (const auto& msg : this->functions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VyperContract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vyper.VyperContract)
  GOOGLE_DCHECK_NE(&from, this);
  const VyperContract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VyperContract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vyper.VyperContract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vyper.VyperContract)
    MergeFrom(*source);
  }
}

void VyperContract::MergeFrom(const VyperContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vyper.VyperContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  functions_.MergeFrom(from.functions_);
}

void VyperContract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vyper.VyperContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VyperContract::CopyFrom(const VyperContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vyper.VyperContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VyperContract::IsInitialized() const {
  return true;
}

void VyperContract::InternalSwap(VyperContract* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  functions_.InternalSwap(&other->functions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VyperContract::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace vyper
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::vyper::Statement* Arena::CreateMaybeMessage< ::vyper::Statement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::Statement >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::Uint256* Arena::CreateMaybeMessage< ::vyper::Uint256 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::Uint256 >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::Value* Arena::CreateMaybeMessage< ::vyper::Value >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::Value >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::Operator* Arena::CreateMaybeMessage< ::vyper::Operator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::Operator >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::Operation* Arena::CreateMaybeMessage< ::vyper::Operation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::Operation >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::ValOrOp* Arena::CreateMaybeMessage< ::vyper::ValOrOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::ValOrOp >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::CodeBlock* Arena::CreateMaybeMessage< ::vyper::CodeBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::CodeBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::ArgDef* Arena::CreateMaybeMessage< ::vyper::ArgDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::ArgDef >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::FunctionDef* Arena::CreateMaybeMessage< ::vyper::FunctionDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::FunctionDef >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::Type* Arena::CreateMaybeMessage< ::vyper::Type >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::Type >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::Assignment* Arena::CreateMaybeMessage< ::vyper::Assignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::Assignment >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::IfStatement* Arena::CreateMaybeMessage< ::vyper::IfStatement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::IfStatement >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::FunctionCall* Arena::CreateMaybeMessage< ::vyper::FunctionCall >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::FunctionCall >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::ConcatCall* Arena::CreateMaybeMessage< ::vyper::ConcatCall >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::ConcatCall >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::ConvertCall* Arena::CreateMaybeMessage< ::vyper::ConvertCall >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::ConvertCall >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::BuiltinCall* Arena::CreateMaybeMessage< ::vyper::BuiltinCall >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::BuiltinCall >(arena);
}
template<> PROTOBUF_NOINLINE ::vyper::VyperContract* Arena::CreateMaybeMessage< ::vyper::VyperContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vyper::VyperContract >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
